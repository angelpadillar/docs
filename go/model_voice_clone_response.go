/*
Buena.ai API v2

The most powerful LinkedIn automation and lead management API for modern sales teams and developers.

API version: 2.0.0
Contact: support@buena.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package buena

import (
	"encoding/json"
)

// checks if the VoiceCloneResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoiceCloneResponse{}

// VoiceCloneResponse struct for VoiceCloneResponse
type VoiceCloneResponse struct {
	Success *bool `json:"success,omitempty"`
	Data *VoiceCloneResponseData `json:"data,omitempty"`
	// Success message
	Message *string `json:"message,omitempty"`
}

// NewVoiceCloneResponse instantiates a new VoiceCloneResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoiceCloneResponse() *VoiceCloneResponse {
	this := VoiceCloneResponse{}
	return &this
}

// NewVoiceCloneResponseWithDefaults instantiates a new VoiceCloneResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoiceCloneResponseWithDefaults() *VoiceCloneResponse {
	this := VoiceCloneResponse{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *VoiceCloneResponse) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceCloneResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *VoiceCloneResponse) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *VoiceCloneResponse) SetSuccess(v bool) {
	o.Success = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *VoiceCloneResponse) GetData() VoiceCloneResponseData {
	if o == nil || IsNil(o.Data) {
		var ret VoiceCloneResponseData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceCloneResponse) GetDataOk() (*VoiceCloneResponseData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *VoiceCloneResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given VoiceCloneResponseData and assigns it to the Data field.
func (o *VoiceCloneResponse) SetData(v VoiceCloneResponseData) {
	o.Data = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *VoiceCloneResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceCloneResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *VoiceCloneResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *VoiceCloneResponse) SetMessage(v string) {
	o.Message = &v
}

func (o VoiceCloneResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoiceCloneResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableVoiceCloneResponse struct {
	value *VoiceCloneResponse
	isSet bool
}

func (v NullableVoiceCloneResponse) Get() *VoiceCloneResponse {
	return v.value
}

func (v *NullableVoiceCloneResponse) Set(val *VoiceCloneResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVoiceCloneResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVoiceCloneResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoiceCloneResponse(val *VoiceCloneResponse) *NullableVoiceCloneResponse {
	return &NullableVoiceCloneResponse{value: val, isSet: true}
}

func (v NullableVoiceCloneResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoiceCloneResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


