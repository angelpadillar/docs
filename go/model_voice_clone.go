/*
Buena.ai API v2

The most powerful LinkedIn automation and lead management API for modern sales teams and developers.

API version: 2.0.0
Contact: support@buena.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package buena

import (
	"encoding/json"
	"time"
)

// checks if the VoiceClone type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoiceClone{}

// VoiceClone struct for VoiceClone
type VoiceClone struct {
	// Unique voice clone identifier
	VoiceId *string `json:"voiceId,omitempty"`
	// User-defined name for the voice clone
	Name *string `json:"name,omitempty"`
	// Description of the voice clone
	Description *string `json:"description,omitempty"`
	// Whether the voice clone is active and available for use
	IsActive *bool `json:"isActive,omitempty"`
	// Number of audio samples used to train this voice
	SampleCount *int32 `json:"sampleCount,omitempty"`
	// When the voice clone was created
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// When the voice clone was last updated
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	// Metadata labels associated with the voice clone
	Labels map[string]interface{} `json:"labels,omitempty"`
}

// NewVoiceClone instantiates a new VoiceClone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoiceClone() *VoiceClone {
	this := VoiceClone{}
	return &this
}

// NewVoiceCloneWithDefaults instantiates a new VoiceClone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoiceCloneWithDefaults() *VoiceClone {
	this := VoiceClone{}
	return &this
}

// GetVoiceId returns the VoiceId field value if set, zero value otherwise.
func (o *VoiceClone) GetVoiceId() string {
	if o == nil || IsNil(o.VoiceId) {
		var ret string
		return ret
	}
	return *o.VoiceId
}

// GetVoiceIdOk returns a tuple with the VoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceClone) GetVoiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.VoiceId) {
		return nil, false
	}
	return o.VoiceId, true
}

// HasVoiceId returns a boolean if a field has been set.
func (o *VoiceClone) HasVoiceId() bool {
	if o != nil && !IsNil(o.VoiceId) {
		return true
	}

	return false
}

// SetVoiceId gets a reference to the given string and assigns it to the VoiceId field.
func (o *VoiceClone) SetVoiceId(v string) {
	o.VoiceId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VoiceClone) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceClone) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VoiceClone) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VoiceClone) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VoiceClone) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceClone) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VoiceClone) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VoiceClone) SetDescription(v string) {
	o.Description = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *VoiceClone) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceClone) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *VoiceClone) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *VoiceClone) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetSampleCount returns the SampleCount field value if set, zero value otherwise.
func (o *VoiceClone) GetSampleCount() int32 {
	if o == nil || IsNil(o.SampleCount) {
		var ret int32
		return ret
	}
	return *o.SampleCount
}

// GetSampleCountOk returns a tuple with the SampleCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceClone) GetSampleCountOk() (*int32, bool) {
	if o == nil || IsNil(o.SampleCount) {
		return nil, false
	}
	return o.SampleCount, true
}

// HasSampleCount returns a boolean if a field has been set.
func (o *VoiceClone) HasSampleCount() bool {
	if o != nil && !IsNil(o.SampleCount) {
		return true
	}

	return false
}

// SetSampleCount gets a reference to the given int32 and assigns it to the SampleCount field.
func (o *VoiceClone) SetSampleCount(v int32) {
	o.SampleCount = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *VoiceClone) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceClone) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *VoiceClone) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *VoiceClone) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *VoiceClone) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceClone) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *VoiceClone) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *VoiceClone) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *VoiceClone) GetLabels() map[string]interface{} {
	if o == nil || IsNil(o.Labels) {
		var ret map[string]interface{}
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceClone) GetLabelsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Labels) {
		return map[string]interface{}{}, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *VoiceClone) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]interface{} and assigns it to the Labels field.
func (o *VoiceClone) SetLabels(v map[string]interface{}) {
	o.Labels = v
}

func (o VoiceClone) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoiceClone) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VoiceId) {
		toSerialize["voiceId"] = o.VoiceId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.IsActive) {
		toSerialize["isActive"] = o.IsActive
	}
	if !IsNil(o.SampleCount) {
		toSerialize["sampleCount"] = o.SampleCount
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	return toSerialize, nil
}

type NullableVoiceClone struct {
	value *VoiceClone
	isSet bool
}

func (v NullableVoiceClone) Get() *VoiceClone {
	return v.value
}

func (v *NullableVoiceClone) Set(val *VoiceClone) {
	v.value = val
	v.isSet = true
}

func (v NullableVoiceClone) IsSet() bool {
	return v.isSet
}

func (v *NullableVoiceClone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoiceClone(val *VoiceClone) *NullableVoiceClone {
	return &NullableVoiceClone{value: val, isSet: true}
}

func (v NullableVoiceClone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoiceClone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


